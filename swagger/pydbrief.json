{
  "openapi": "3.0.3",
  "info": {
    "title": "PyDBrief API",
    "description": "A Workbench for bidirectional data migration between different RDBMS engines",
    "contact": {
      "email": "gtnunes@gmail.com"
    },
    "version": "1.0.0_RC11"
  },
  "externalDocs": {
    "description": "Known more about PyDBrief",
    "url": "https://github.com/TheWiseCoder/PyDBrief"
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Local server for RDBMS migration work"
    }
  ],
  "tags": [
    {
      "name": "rdbms",
      "description": "Domain related to the RDBMS engines",
      "externalDocs": {
        "description": "About RDBMS engines",
        "url": "https://en.wikipedia.org/wiki/Relational_database"
      }
    },
    {
      "name": "data migration",
      "description": "Data migration at various levels",
      "externalDocs": {
        "description": "Learn about data migration between RDBMS engines",
        "url": "https://en.wikipedia.org/wiki/Schema_migration"
      }
    },
    {
      "name": "registry",
      "description": "Operational data on the PyDBrief server"
    }
  ],
  "paths": {
    "/rdbms/{rdbms}": {
      "get": {
        "tags": [
          "rdbms"
        ],
        "summary": "Retrieve the RDBMS engine configuration data",
        "description": "Retrieve the connection parameters for the given RDBMS engine.",
        "operationId": "get-rdbms-configuration",
        "parameters": [
          {
            "$ref": "#/components/parameters/RdbmsParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OracleConfiguration"
                }
              }
            }
          },
          "400": {
            "description": "No data found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RdbmsError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "rdbms"
        ],
        "summary": "Configure the the RDBMS engine",
        "description": "Configure the RDBMS engine with the data needed for conection.",
        "operationId": "configure-rdbms-engine",
        "parameters": [
          {
            "$ref": "#/components/parameters/RdbmsParam"
          },
          {
            "$ref": "#/components/parameters/DbNameParam"
          },
          {
            "$ref": "#/components/parameters/DbUserParam"
          },
          {
            "$ref": "#/components/parameters/DbPwdParam"
          },
          {
            "$ref": "#/components/parameters/DbHostParam"
          },
          {
            "$ref": "#/components/parameters/DbPortParam"
          },
          {
            "$ref": "#/components/parameters/DbClientParam"
          },
          {
            "$ref": "#/components/parameters/DbDriverParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Configuration updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RdbmsUpdated"
                }
              }
            }
          },
          "400": {
            "description": "Unable to update the RDBMS engine's configuration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RdbmsError"
                }
              }
            }
          }
        }
      }
    },
    "/migration:configure": {
      "get": {
        "tags": [
          "data migration"
        ],
        "summary": "Retrieve the configuration for data migration",
        "description": "Retrieve the RDBMS-independent parameters driving the data migration.",
        "operationId": "get-migration-configuration",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationUpdated"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "data migration"
        ],
        "summary": "Configure the migration process",
        "description": "Set up the RDBMS-independent parameters driving the migration process.",
        "operationId": "configure-migration",
        "parameters": [
          {
            "name": "batch-size",
            "in": "query",
            "description": "Maximum number of rows to migrate per batch (range is [1000-1000000]).",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1000,
              "maximum": 1000000,
              "default": 200000
            }
          },
          {
            "name": "processes",
            "in": "query",
            "description": "The number of processes to speed-up the migration with (range is [1-20]).",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 20,
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Migration configured"
          },
          "400": {
            "description": "Unable to configure the migration process",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessesError"
                }
              }
            }
          }
        }
      }
    },
    "/migration:verify": {
      "post": {
        "tags": [
          "data migration"
        ],
        "summary": "Verify whether a migration can be launched",
        "description": "Verify whether the current configuration allows for a migration to be launched.",
        "operationId": "verify-migration",
        "parameters": [
          {
            "$ref": "#/components/parameters/FromRdbmsParam"
          },
          {
            "$ref": "#/components/parameters/ToRdbmsParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Migration can be launched",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Migration cannot be launched",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationFailure"
                }
              }
            }
          }
        }
      }
    },
    "/migrate": {
      "post": {
        "tags": [
          "data migration"
        ],
        "summary": "Migrate the data",
        "description": "Migrate the data from the source to the target RDBMS and schema.",
        "operationId": "migrate-schema",
        "parameters": [
          {
            "$ref": "#/components/parameters/FromRdbmsParam"
          },
          {
            "$ref": "#/components/parameters/FromSchemaParam"
          },
          {
            "$ref": "#/components/parameters/ToRdbmsParam"
          },
          {
            "$ref": "#/components/parameters/ToSchemaParam"
          },
          {
            "$ref": "#/components/parameters/TablesParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MigrationSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaError"
                }
              }
            }
          }
        }
      }
    },
    "/get-log": {
      "get": {
        "tags": [
          "registry"
        ],
        "summary": "Retrieve the server's operation log",
        "description": "Retrieve a file containing the operation log of the PyDBrief server.",
        "operationId": "get-app-log",
        "parameters": [
          {
            "name": "attach",
            "in": "query",
            "description": "Indicates, with the value '0', 'f' or 'false', that the file should be displayed by the browser. It is saved by default.",
            "required": false,
            "schema": {
              "type": "string",
              "default": true
            }
          },
          {
            "name": "level",
            "in": "query",
            "description": "The desired log level",
            "required": false,
            "schema": {
              "type": "string",
              "default": "debug",
              "enum": [
                "debug",
                "info",
                "warning",
                "error",
                "critical"
              ]
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Timestamp for the start of the interval",
            "required": false,
            "schema": {
              "type": "string",
              "format": "YYYYMMDDhhmmss"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Timestamp for the end of the interval",
            "required": false,
            "schema": {
              "type": "string",
              "format": "YYYYMMDDhhmmss"
            }
          },
          {
            "name": "last-days",
            "in": "query",
            "description": "How many days to go back for the start of the interval - ignored if 'from' or 'to' are specified",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "last-hours",
            "in": "query",
            "description": "How many hours to go back for the start of the interval - ignored if 'from' or 'to' are specified",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Value '<from>' of 'from' attribute invalid"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/swagger/pydbrief.json": {
      "get": {
        "tags": [
          "registry"
        ],
        "summary": "Retrieve PyDBrief's API specifications in Swagger JSON format",
        "description": "Retrieve the file containing the API specifications in Swagger JSON format.",
        "operationId": "get-swagger-json",
        "parameters": [
          {
            "name": "attach",
            "in": "query",
            "description": "Indicates, with the value '0', 'f' or 'false', that the file should be displayed by the browser. It is saved by default.",
            "required": false,
            "schema": {
              "type": "string",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "tags": [
          "registry"
        ],
        "summary": "Retrieve the current PyDBrief's version",
        "description": "Retrieve the version of the PyDBrief currently running.",
        "operationId": "get-version",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string",
                      "example": "1.0.0_RC10"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "RdbmsParam": {
        "name": "rdbms",
        "in": "path",
        "description": "The RDBMS engine to configure",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "mysql",
            "oracle",
            "postgres",
            "sqlserver"
          ]
        }
      },
      "DbNameParam": {
        "name": "db-name",
        "in": "query",
        "description": "The database identification",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "DbUserParam": {
        "name": "db-user",
        "in": "query",
        "description": "Logon user",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "DbPwdParam": {
        "name": "db-pwd",
        "in": "query",
        "description": "Logon password",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "DbHostParam": {
        "name": "db-host",
        "in": "query",
        "description": "Host access URL",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "DbPortParam": {
        "name": "db-port",
        "in": "query",
        "description": "Host access port",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "DbClientParam": {
        "name": "db-client",
        "in": "query",
        "description": "Client software installed in local desktop (Oracle, only)",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "DbDriverParam": {
        "name": "db-driver",
        "in": "query",
        "description": "Database access driver (SQLServer, only)",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "FromRdbmsParam": {
        "name": "from-rdbms",
        "in": "query",
        "description": "The RBMS to migrate from",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "mysql",
            "oracle",
            "postgres",
            "sqlserver"
          ],
          "example": "oracle"
        }
      },
      "ToRdbmsParam": {
        "name": "to-rdbms",
        "in": "query",
        "description": "The RBMS to migrate to",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "mysql",
            "oracle",
            "postgres",
            "sqlserver"
          ],
          "example": "postgres"
        }
      },
      "FromSchemaParam": {
        "name": "from-schema",
        "in": "query",
        "description": "The schema to migrate from",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ToSchemaParam": {
        "name": "to-schema",
        "in": "query",
        "description": "The schema to migrate to",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "TablesParam": {
        "name": "tables",
        "in": "query",
        "description": "Tables to migrate",
        "required": false,
        "explode": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "schemas": {
      "MigrationConfiguration": {
        "type": "object",
        "properties": {
          "batch-size": {
            "type": "integer",
            "example": 200000
          },
          "processes": {
            "type": "integer",
            "example": 10
          }
        }
      },
      "OracleConfiguration": {
        "type": "object",
        "properties": {
          "rdbms": {
            "type": "string",
            "example": "oracle"
          },
          "name": {
            "type": "string",
            "example": "MyOracle"
          },
          "user": {
            "type": "string",
            "example": "admin"
          },
          "pwd": {
            "type": "string",
            "example": "admin"
          },
          "host": {
            "type": "string",
            "example": "https://my-oracle.com"
          },
          "port": {
            "type": "integer",
            "example": 1521
          },
          "client": {
            "type": "string",
            "example": "C:\\oracle\\instantclient_21_6"
          }
        }
      },
      "PostgresConfiguration": {
        "type": "object",
        "properties": {
          "rdbms": {
            "type": "string",
            "example": "postgres"
          },
          "name": {
            "type": "string",
            "example": "MyPostgres"
          },
          "user": {
            "type": "string",
            "example": "admin"
          },
          "password": {
            "type": "string",
            "example": "admin"
          },
          "host": {
            "type": "string",
            "example": "https://my-postgres.com"
          },
          "port": {
            "type": "integer",
            "example": 5432
          }
        }
      },
      "ConfigurationUpdated": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "Configuration updated"
          }
        }
      },
      "RdbmsUpdated": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "Rdbms configuration updated"
          }
        }
      },
      "VerificationSuccess": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "Migration can be launched"
          },
          "batch-size": {
            "type": "integer",
            "example": 200000
          },
          "processes": {
            "type": "integer",
            "example": 10
          },
          "from": {
            "$ref": "#/components/schemas/OracleConfiguration"
          },
          "to": {
            "$ref": "#/components/schemas/PostgresConfiguration"
          }
        }
      },
      "VerificationFailure": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "Migration cannot be launched"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "PYDB116"
                },
                "description": {
                  "type": "string",
                  "example": "Value 'oracle' cannot be assigned for attributes 'from-rdbms' and 'to-rdbms' at the same time"
                }
              }
            }
          }
        }
      },
      "MigrationSuccess": {
        "type": "object",
        "properties": {
          "started": {
            "type": "string",
            "example": "2024-05-06T23:51:42.000Z"
          },
          "finished": {
            "type": "string",
            "example": "2024-05-06T23:51:46.000Z"
          },
          "source": {
            "type": "object",
            "properties": {
              "rdbms": {
                "type": "string",
                "example": "oracle"
              },
              "schema": {
                "type": "string",
                "example": "ora-schema"
              }
            }
          },
          "target": {
            "type": "object",
            "properties": {
              "rdbms": {
                "type": "string",
                "example": "postgres"
              },
              "schema": {
                "type": "string",
                "example": "pg-schema"
              }
            }
          },
          "migrated-tables": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "table": {
                  "type": "string",
                  "example": "customers"
                },
                "columns": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "customer-name"
                      },
                      "source-type": {
                        "type": "string",
                        "example": "NUMBER(7,0)"
                      },
                      "target-type": {
                        "type": "string",
                        "example": "INTEGER"
                      },
                      "features": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "primary key"
                        }
                      }
                    }
                  }
                },
                "count": {
                  "type": "integer",
                  "example": 1250000
                },
                "status": {
                  "type": "string",
                  "example": "full"
                }
              }
            }
          }
        }
      },
      "SchemaError": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "attribute": {
                  "type": "string",
                  "example": "schema"
                },
                "code": {
                  "type": "string",
                  "example": "PYDB121"
                },
                "description": {
                  "type": "string",
                  "example": "Invalid value 'my-schema'"
                }
              }
            }
          }
        }
      },
      "TablesError": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "attribute": {
                  "type": "string",
                  "example": "tables"
                },
                "code": {
                  "type": "string",
                  "example": "PYDB121"
                },
                "description": {
                  "type": "string",
                  "example": "Invalid value 'my-table'"
                }
              }
            }
          }
        }
      },
      "RdbmsError": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "attribute": {
                  "type": "string",
                  "example": "db-name"
                },
                "code": {
                  "type": "string",
                  "example": "PYDB121"
                },
                "description": {
                  "type": "string",
                  "example": "Invalid value 'my-database'"
                }
              }
            }
          }
        }
      },
      "ProcessesError": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "attribute": {
                  "type": "string",
                  "example": "processes"
                },
                "code": {
                  "type": "string",
                  "example": "PYDB121"
                },
                "description": {
                  "type": "string",
                  "example": "Invalid value '0'"
                }
              }
            }
          }
        }
      }
    }
  }
}